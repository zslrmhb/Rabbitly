version: "3.9"

volumes:
  # Keeps Linux‑built node_modules between container restarts
  frontend_node_modules:

services:
  # -------------  FRONTEND  (SvelteKit + Vite) -------------
  frontend:
    image: rabbitly-frontend:dev 
    container_name: frontend-dev                      # fixed, easy to exec
    build:
      context: ./frontend
      target: dev                                     # hot‑reload stage
    # Bind source, BUT mask node_modules with a named volume
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      PUBLIC_API_URL: http://backend-api:8000      # <─ Docker DNS name
    env_file:
      - .env.example
    # Omit depends_on so you can run the UI alone
    restart: unless-stopped

  # Populate the named volume once (runs & exits)
  # docker-compose.dev.yml  (excerpt)
  # THIS SOLVE THE FOLLOWING PROBLEM: docker copying binary files from MacOS to LINUX
  frontend-init:
    image: rabbitly-frontend:dev
    build:
      context: ./frontend
      target: dev        # uses same dev stage
    command: ["true"]    # exits immediately after seeding volume
    volumes:
      - frontend_node_modules:/app/node_modules

  # -------------  BACKEND GATEWAY  -------------------------
  backend-api:
    image: rabbitly-backend-api:dev
    container_name: backend-api-dev
    build:
      context: ./backend-api
      target: dev
    volumes:
      - ./backend-api:/app
    ports:
      - "8000:8000"
    environment:
      AI_SERVICE_URL: http://ai-service:9000
      CODE_RUNNER_URL: http://code-runner:9100
    depends_on:
      - ai-service
      - code-runner
    restart: unless-stopped

  # -------------  AI SERVICE  ------------------------------
  ai-service:
    image: rabbitly-ai-service:dev
    container_name: ai-service-dev
    build:
      context: ./ai-service
      target: dev
    volumes:
      - ./ai-service:/app
    ports:
      - "9000:9000"
    restart: unless-stopped

  # -------------  CODE‑RUNNER  ------------------------------
  code-runner:
    image: rabbitly-code-runner:dev
    container_name: code-runner-dev
    build:
      context: ./code-runner
      target: dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9100:9100"
    privileged: true         # needed on some hosts for DinD‑style sandboxing
    restart: unless-stopped